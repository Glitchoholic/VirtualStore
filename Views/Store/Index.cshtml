@model IQueryable<VirtualStore.Models.Store>
@using NonFactors.Mvc.Grid

@{
    ViewData["Title"] = "Store List";
}

<h2 class="mb-4">Stores</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <a href="@Url.Action("Create", "Store")" class="btn btn-success">Add New Store</a>
</div>

<form method="get" asp-controller="Store" asp-action="Index" class="row g-3 mb-4">
    <input type="hidden" name="search" value="true" />

    <div class="col-md-3">
        <label for="name" class="form-label">Name</label>
        <input type="text" name="name" value="@ViewBag.SearchName" class="form-control" placeholder="Search by name" />
    </div>

    <div class="col-md-3">
        <label for="address" class="form-label">Address</label>
        <input type="text" name="address" value="@ViewBag.SearchAddress" class="form-control" placeholder="Search by address" />
    </div>

    <div class="col-md-2">
        <div class="form-check mt-4">
            <input type="checkbox" name="isMain" value="true" class="form-check-input" id="isMainCheck"
                   @(ViewBag.SearchIsMain == true ? "checked" : "") />
            <label class="form-check-label" for="isMainCheck">Main Store</label>
        </div>
    </div>

    <div class="col-md-2">
        <div class="form-check mt-4">
            <input type="checkbox" name="isInvoiceDirect" value="true" class="form-check-input" id="isInvoiceCheck"
                   @(ViewBag.SearchIsInvoiceDirect == true ? "checked" : "") />
            <label class="form-check-label" for="isInvoiceCheck">Invoice Direct</label>
        </div>
    </div>

    <div class="col-md-2 d-grid mt-4">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<div class="table-responsive">
    @(Html.Grid(Model)
        .Build(columns =>
        {
            columns.Add(m => m.Name)
            .Titled("Name")
            .Css("text-start")
            .Filterable(true)
            .Sortable(true);

            columns.Add(m => m.Address)
            .Titled("Address")
            .Css("text-start")
            .Filterable(true)
            .Sortable(true);

            columns.Add(m => m.IsMain)
            .Titled("Main")
            .RenderedAs(x => x.IsMain ? "Yes" : "No")
            .Css("text-center")
            .Filterable(true)
            .Sortable(true);

            columns.Add(m => m.IsInvoiceDirect)
            .Titled("Invoice Direct")
            .RenderedAs(x => x.IsInvoiceDirect ? "Yes" : "No")
            .Css("text-center")
            .Filterable(true)
            .Sortable(true);

            columns.Add()
            .Titled("Actions")
            .Encoded(false)
            .Css("text-center")
            .RenderedAs(store => $@"
        <a href='/Store/Details/{store.Id}' class='btn btn-sm btn-info me-1'>Details</a>
        <a href='/Store/Edit/{store.Id}' class='btn btn-sm btn-warning me-1'>Edit</a>
        <a href='/Store/Delete/{store.Id}' class='btn btn-sm btn-danger'>Delete</a>
        ");
        })
        .Empty("No stores found.")
        .Css("table table-striped table-bordered")
        .Filterable()
        .Sortable()
        .Pageable()
        )
</div>
